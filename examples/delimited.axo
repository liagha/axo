// Simple elements
simple_element

// Group - comma-separated in parentheses
(first, second, third)
(x, y, z, w)
(single)
()

// Sequence - semicolon-separated in parentheses
(init; process; cleanup)
(step1; step2; step3; step4)
(one_step)
(;)

// Collection - comma-separated in brackets
[item1, item2, item3]
[red, green, blue, yellow]
[lone_item]
[]

// Series - semicolon-separated in brackets
[phase1; phase2; phase3]
[setup; execute; teardown; report]
[single_phase]
[;]

// Bundle - comma-separated in braces
{prop1, prop2, prop3}
{name, age, email, phone}
{only_one}
{}

// Scope - semicolon-separated in braces
{declare; initialize; process}
{var1; var2; var3; cleanup}
{isolated_operation}
{;}

// Nested combinations
(group_start, [inner, collection], {bundle, elements})
[outer; (inner, group); {scope; operations}]
{main, (sub, elements), [list; items]}

// Complex nesting
(
    setup,
    [config; params],
    {
        database,
        cache,
        logging
    }
)

// Mixed depth nesting
{
    authentication;
    (user, pass, token);
    [
        permissions,
        roles,
        access_levels
    ];
    {
        session;
        timeout;
        refresh
    }
}

test[index]